import 'package:everest/Services/Firebase/Firestore/firestore_user_service.dart';
import 'package:everest/Services/Firebase/user.dart';
import 'package:everest/Views/intro_page.dart';
import 'package:everest/Widgets/app_logo.dart';
import 'package:firebase_auth/firebase_auth.dart' as firebase_auth;

import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

/// Used to create user-dependant objects that need to be accessible by all widgets.
/// This widget should live above the [MaterialApp].
/// See [AuthWidget], a descendant widget that consumes the snapshot generated by this builder.
class UserWidgetBuilder extends StatelessWidget {
  const UserWidgetBuilder({Key key, @required this.builder, this.authSnapshot}) : super(key: key);
  final Widget Function(BuildContext,  AsyncSnapshot<firebase_auth.User>,AsyncSnapshot<User>) builder;
  final AsyncSnapshot<firebase_auth.User> authSnapshot;

  @override
  Widget build(BuildContext context) {
    if(authSnapshot.connectionState == ConnectionState.active) {
      if(authSnapshot.hasData) {
        FirestoreUserService firestoreService = Provider.of<
            FirestoreUserService>(
            context);
        return StreamBuilder<User>(
          stream: firestoreService.userStream(),
          builder: (context, snapshot) {
            if (snapshot.connectionState == ConnectionState.active) {
              final User user = snapshot.data;
              if (user != null) {
                return MultiProvider(
                  providers: [
                    Provider<User>.value(value: user),
                  ],
                  child: builder(context, authSnapshot, snapshot),
                );
              }
            }
            return builder(context, authSnapshot, snapshot);
          },
        );
      }
    }
    return builder(context, authSnapshot, null);
  }
}
